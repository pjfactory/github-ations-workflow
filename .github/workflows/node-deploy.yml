name: node deploy reusable workflow

on:
    workflow_call:
        inputs:
            project_name:
                required: true
                type: string
            stage:
                required: true
                type: string
            ssm_region:
                default: "us-east-1"
                required: false
                type: string
            deploy_alias:
                default: "v1"
                required: false
                type: string
        secrets:
            npm_token:
                required: true
            aws_access_key_id:
                required: true
            aws_secret_access_key:
                required: true
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version-file: ".nvmrc"
                  cache: "yarn"
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ env.STAGE }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ env.STAGE }}-
              env:
                  CACHE_NAME: ${{ inputs.project_name }}
                  STAGE: ${{ inputs.stage }}
            - name: yarn install local dependency
              run: yarn install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
            - name: config
              run: yarn config:download -s ${{ env.NODE_ENV }}
              env:
                  NODE_ENV: ${{ inputs.stage }}
                  AWS_REGION: ${{ inputs.ssm_region }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
            - name: environment variable check
              run: |
                  yarn config:validate -s ${{ env.NODE_ENV }}
              env:
                  NODE_ENV: ${{ inputs.stage }}
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: deploy
              run: |
                  yarn deploy:${{ env.DEPLOY_ALIAS }} -s ${{ env.NODE_ENV }}
              env:
                  NODE_ENV: ${{ inputs.stage }}
                  DEPLOY_ALIAS: ${{ inputs.deploy_alias }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
